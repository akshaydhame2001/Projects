class Solution:
    def sortEvenOdd(self, nums: List[int]) -> List[int]:
        numse=[]
        numso=[]
        for i in range(len(nums)):
            if i%2==0:
                numse.append(nums[i])
            else:
                numso.append(nums[i])
        numsee=sorted(numse)
        numso.sort()
        numsoo=numso[::-1]
        result=[]
        a,b=len(numsee),len(numsoo)
        if a>b:
            c=a
        else:
            c=b
        for i in range(c):
            if (i<=a-1):
                result.append(numsee[i])
            if (i<=b-1):
                result.append(numsoo[i])
        return result
        
        
class Solution:
    def sortEvenOdd(self, nums: List[int]) -> List[int]:
        nums[::2], nums[1::2] = sorted(nums[::2]), sorted(nums[1::2])[::-1]
        return nums
        

class Solution:
    def sortEvenOdd(self, nums):
        if len(nums) == 2:
            return nums
        else:
            evensorted = []
            oddsorted = []
            for i in range(len(nums)):
                if i%2 == 0:
                    evensorted.append(nums[i])
                else:
                    oddsorted.append(nums[i])
            evensorted.sort()
            oddsorted.sort(reverse=True)
            
            evenindex = 0
            oddindex = 0
            for i in range(len(nums)):
                if i%2==0:
                    nums[i] = evensorted[evenindex]
                    evenindex += 1
                else:
                    nums[i] = oddsorted[oddindex]
                    oddindex += 1
        return nums
